server {

	root /home/hafil/moments/build;
	index index.html index.htm index.nginx-debian.html;

	server_name moments.lk www.moments.lk;
	
    location ~ ^/p/.* {
        proxy_pass http://localhost:4100;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;
        proxy_set_header Host $http_host;
    }

    location ~ ^/api/?.* {
        proxy_pass http://127.0.0.1:4000;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;

        # web socket
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_http_version 1.1;
    }


	location / {
        root /home/hafil/moments/build;
		try_files $uri $uri/ =404;
	}

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/moments.lk/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/moments.lk/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}
server {
    if ($host = www.moments.lk) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = moments.lk) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


	listen 80;
	listen [::]:80;

	server_name moments.lk www.moments.lk;
    return 404; # managed by Certbot




}